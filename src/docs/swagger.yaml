openapi: 3.0.0
info:
  title: SROA API
  version: '1.0.0'
  description: API Spec
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /api/login:
    post:
      summary: Authenticate user and return a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@sroa.com
                password:
                  type: string
                  format: password
                  example: yourpassword
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
        '400':
          description: Missing required fields
        '401':
          description: Invalid email or password
        '403':
          description: Account is temporarily locked due to multiple failed login attempts
        '500':
          description: Internal server error
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
                - role
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: yourpassword
                name:
                  type: string
                  example: John Doe
                dob:
                  type: string
                  format: date
                  example: 1990-01-01
                role:
                  type: string
                  example: Admin
      responses:
        '200':
          description: User successfully registered
        '400':
          description: Missing or invalid fields
        '409':
          description: Email already in use
        '500':
          description: Internal server error
  /api/validate-token:
    post:
      summary: Validate JWT and retrieve associated user information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The validated JWT
                  userId:
                    type: string
                    description: ID of the user associated with the token
        '401':
          description: Invalid or missing token
        '500':
          description: Internal server error
  /api/forgot-password:
    post:
      summary: Initiate password reset process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@sroa.com
      responses:
        '200':
          description: Password reset link sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: A link to reset password was sent to the email
        '403':
          description: User does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: There was a problem. User does not exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /api/reset-password:
    post:
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: your-reset-token
                email:
                  type: string
                  format: email
                  example: user@sroa.com
                password:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Your password was updated successfully. Now you can login with your new password
        '403':
          description: Invalid token, token expired, or user does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: There was a problem resetting your password. Invalid Token
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
